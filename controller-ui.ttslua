text = {}
count = {}

function text.ui(pos, rot, size, label)
  if label == nil then
    label = '0'
  end

  local params = {
    type      = '3DText',
    position  = pos,
    rotation  = rot,
  }
  obj = spawnObject(params)
  obj.setValue(label)
  obj.TextTool.setFontColor({1,1,1})
  obj.TextTool.setFontSize(size)
  obj.setScale({1.5,1.5,1.5})
  return obj
end

function count.deck(deck)
  local val = 0
  if deck == nil then
    return 0
  end
  if(deck.getQuantity() == -1) then
    return 1
  end
  return deck.getQuantity()
end

function onChangeColor(player, option, id)
  local teste = string.lower(player.color)..'-'..id;
  if option == 'Brown' then
    option = '#713b17'
  end
  if option == 'Teal' then
    option = '#21b19b'
  end
  if option == 'Orange' then
    option = '#f4641d'
  end
  if option == 'Purple' then
    option = '#a020f0'
  end
  if option == 'Pink' then
    option = '#f570ce'
  end
  UI.setAttribute(teste, 'fillImageColor', option);
end

function onChangeHP(player, option, id)
  local teste = string.lower(player.color)..'-'..id;
  UI.setValue(teste, option..'/'..option);
  updateTextUI(id, option, string.lower(player.color))
end

function onChangeName(player, option, id)
  UI.setValue(string.lower(player.color)..'-'..id, option);
  local name = option:gsub(" ", "\n")
  local player3D = getPlayer3D(string.lower(player.color))
  if split(id,'-')[1] == 'm1' then
    player3D.m1.name.setValue(name);
  end
  if split(id,'-')[1] == 'm2' then
    player3D.m2.name.setValue(name);
  end
  if split(id,'-')[1] == 'm3' then
    player3D.m3.name.setValue(name);
  end
end

function onChangeTeamName(player, option, id)
  local teste = string.lower(player.color)..'-'..id;
  UI.setValue(teste, option);
end

function toggleSet(player, option, id)
  local visibility = UI.getAttribute(string.lower(player.color)..'-set-panel', 'visibility');
  local change = 'false'
  if visibility == 'false' then
    change = player.color;
  end
  UI.setAttribute(string.lower(player.color)..'-set-panel', 'visibility', change);
end

function hpDown(player, option, id)
  local stringHP = UI.getValue(string.lower(player.color)..'-'..option..'-hp');
  if stringHP == nil then
    return
  end
  local atual = split(stringHP, '/')[1] + 0
  local max = split(stringHP, '/')[2] + 0
  local novo = atual-1
  if novo >= 0 then
    UI.setValue(string.lower(player.color)..'-'..option..'-hp', (novo)..'/'..max)
    UI.setAttribute(string.lower(player.color)..'-'..option..'-percentage', 'percentage', (novo/max)*100)
    updateTextUI(option, novo, string.lower(player.color))
  end
end

function hpUp(player, option, id)
  local stringHP = UI.getValue(string.lower(player.color)..'-'..option..'-hp');
  if stringHP == nil then
    return
  end
  local atual = split(stringHP, '/')[1] + 0
  local max = split(stringHP, '/')[2] + 0
  local novo = atual+1
  if novo <= max then
    UI.setValue(string.lower(player.color)..'-'..option..'-hp', (novo)..'/'..max)
    UI.setAttribute(string.lower(player.color)..'-'..option..'-percentage', 'percentage', (novo/max)*100)
    updateTextUI(option, novo, string.lower(player.color))
  end
end

function updateTextUI(id, option, color)
  local player3D = getPlayer3D(color)
  if split(id,'-')[1] == 'm1' then
    player3D.m1.hp.setValue(option..'');
  end
  if split(id,'-')[1] == 'm2' then
    player3D.m2.hp.setValue(option..'');
  end
  if split(id,'-')[1] == 'm3' then
    player3D.m3.hp.setValue(option..'');
  end
end

function getPlayer3D(color)
  if color == 'yellow' then
    return yellow3D
  end
  if color == 'green' then
    return green3D
  end
end

function split(pString, pPattern)
  local Table = {}
  local fpat = "(.-)" .. pPattern
  local last_end = 1
  local s, e, cap = pString:find(fpat, 1)
  while s do
    if s ~= 1 or cap ~= "" then
      table.insert(Table,cap)
    end
    last_end = e+1
    s, e, cap = pString:find(fpat, last_end)
  end
  if last_end <= #pString then
    cap = pString:sub(last_end)
    table.insert(Table, cap)
  end
  return Table
end
